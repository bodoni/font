//! Features.

use std::collections::HashMap;

/// Features.
pub type Features = HashMap<Type, Vec<u32>>;

macro_rules! implement(
    ($($tag:literal => $variant:ident,)*) => (
        /// A [type][1].
        ///
        /// [1]: https://learn.microsoft.com/en-us/typography/opentype/spec/featurelist
        #[derive(Clone, Copy, Debug, Eq, Hash, PartialEq)]
        pub enum Type {
            $($variant,)*
        }
    );
);

implement!(
    b"aalt" => AccessAllAlternates,
    b"abvf" => AboveBaseForms,
    b"abvm" => AboveBaseMarkPositioning,
    b"abvs" => AboveBaseSubstitutions,
    b"afrc" => AlternativeFractions,
    b"akhn" => Akhand,
    b"blwf" => BelowBaseForms,
    b"blwm" => BelowBaseMarkPositioning,
    b"blws" => BelowBaseSubstitutions,
    b"c2pc" => PetiteCapitalsFromCapitals,
    b"c2sc" => SmallCapitalsFromCapitals,
    b"calt" => ContextualAlternates,
    b"case" => CaseSensitiveForms,
    b"ccmp" => GlyphComposition,
    b"cfar" => ConjunctFormAfterRo,
    b"chws" => ContextualHalfWidthSpacing,
    b"cjct" => ConjunctForms,
    b"clig" => ContextualLigatures,
    b"cpct" => CenteredCJKPunctuation,
    b"cpsp" => CapitalSpacing,
    b"cswh" => ContextualSwash,
    b"curs" => CursivePositioning,
    b"cv01" => CharacterVariants1,
    b"cv02" => CharacterVariants2,
    b"cv03" => CharacterVariants3,
    b"cv04" => CharacterVariants4,
    b"cv05" => CharacterVariants5,
    b"cv06" => CharacterVariants6,
    b"cv07" => CharacterVariants7,
    b"cv08" => CharacterVariants8,
    b"cv09" => CharacterVariants9,
    b"cv10" => CharacterVariants10,
    b"cv11" => CharacterVariants11,
    b"cv12" => CharacterVariants12,
    b"cv13" => CharacterVariants13,
    b"cv14" => CharacterVariants14,
    b"cv15" => CharacterVariants15,
    b"cv16" => CharacterVariants16,
    b"cv17" => CharacterVariants17,
    b"cv18" => CharacterVariants18,
    b"cv19" => CharacterVariants19,
    b"cv20" => CharacterVariants20,
    b"cv21" => CharacterVariants21,
    b"cv22" => CharacterVariants22,
    b"cv23" => CharacterVariants23,
    b"cv24" => CharacterVariants24,
    b"cv25" => CharacterVariants25,
    b"cv26" => CharacterVariants26,
    b"cv27" => CharacterVariants27,
    b"cv28" => CharacterVariants28,
    b"cv29" => CharacterVariants29,
    b"cv30" => CharacterVariants30,
    b"cv31" => CharacterVariants31,
    b"cv32" => CharacterVariants32,
    b"cv33" => CharacterVariants33,
    b"cv34" => CharacterVariants34,
    b"cv35" => CharacterVariants35,
    b"cv36" => CharacterVariants36,
    b"cv37" => CharacterVariants37,
    b"cv38" => CharacterVariants38,
    b"cv39" => CharacterVariants39,
    b"cv40" => CharacterVariants40,
    b"cv41" => CharacterVariants41,
    b"cv42" => CharacterVariants42,
    b"cv43" => CharacterVariants43,
    b"cv44" => CharacterVariants44,
    b"cv45" => CharacterVariants45,
    b"cv46" => CharacterVariants46,
    b"cv47" => CharacterVariants47,
    b"cv48" => CharacterVariants48,
    b"cv49" => CharacterVariants49,
    b"cv50" => CharacterVariants50,
    b"cv51" => CharacterVariants51,
    b"cv52" => CharacterVariants52,
    b"cv53" => CharacterVariants53,
    b"cv54" => CharacterVariants54,
    b"cv55" => CharacterVariants55,
    b"cv56" => CharacterVariants56,
    b"cv57" => CharacterVariants57,
    b"cv58" => CharacterVariants58,
    b"cv59" => CharacterVariants59,
    b"cv60" => CharacterVariants60,
    b"cv61" => CharacterVariants61,
    b"cv62" => CharacterVariants62,
    b"cv63" => CharacterVariants63,
    b"cv64" => CharacterVariants64,
    b"cv65" => CharacterVariants65,
    b"cv66" => CharacterVariants66,
    b"cv67" => CharacterVariants67,
    b"cv68" => CharacterVariants68,
    b"cv69" => CharacterVariants69,
    b"cv70" => CharacterVariants70,
    b"cv71" => CharacterVariants71,
    b"cv72" => CharacterVariants72,
    b"cv73" => CharacterVariants73,
    b"cv74" => CharacterVariants74,
    b"cv75" => CharacterVariants75,
    b"cv76" => CharacterVariants76,
    b"cv77" => CharacterVariants77,
    b"cv78" => CharacterVariants78,
    b"cv79" => CharacterVariants79,
    b"cv80" => CharacterVariants80,
    b"cv81" => CharacterVariants81,
    b"cv82" => CharacterVariants82,
    b"cv83" => CharacterVariants83,
    b"cv84" => CharacterVariants84,
    b"cv85" => CharacterVariants85,
    b"cv86" => CharacterVariants86,
    b"cv87" => CharacterVariants87,
    b"cv88" => CharacterVariants88,
    b"cv89" => CharacterVariants89,
    b"cv90" => CharacterVariants90,
    b"cv91" => CharacterVariants91,
    b"cv92" => CharacterVariants92,
    b"cv93" => CharacterVariants93,
    b"cv94" => CharacterVariants94,
    b"cv95" => CharacterVariants95,
    b"cv96" => CharacterVariants96,
    b"cv97" => CharacterVariants97,
    b"cv98" => CharacterVariants98,
    b"cv99" => CharacterVariants99,
    b"dist" => Distances,
    b"dlig" => DiscretionaryLigatures,
    b"dnom" => Denominators,
    b"dtls" => DotlessForms,
    b"expt" => ExpertForms,
    b"falt" => FinalGlyphonLineAlternates,
    b"fina" => TerminalForms1,
    b"fin2" => TerminalForms2,
    b"fin3" => TerminalForms3,
    b"flac" => FlattenedAccentForms,
    b"frac" => Fractions,
    b"fwid" => FullWidths,
    b"half" => HalfForms,
    b"haln" => HalantForms,
    b"halt" => AlternateHalfWidths,
    b"hist" => HistoricalForms,
    b"hkna" => HorizontalKanaAlternates,
    b"hlig" => HistoricalLigatures,
    b"hngl" => Hangul,
    b"hojo" => HojoKanjiForms,
    b"hwid" => HalfWidths,
    b"init" => InitialForms,
    b"isol" => IsolatedForms,
    b"ital" => Italics,
    b"jalt" => JustificationAlternates,
    b"jp78" => JIS78Forms,
    b"jp83" => JIS83Forms,
    b"jp90" => JIS90Forms,
    b"jp04" => JIS2004Forms,
    b"kern" => Kerning,
    b"lfbd" => LeftBounds,
    b"liga" => StandardLigatures,
    b"ljmo" => LeadingJamoForms,
    b"lnum" => LiningFigures,
    b"locl" => LocalizedForms,
    b"ltra" => LeftToRightAlternates,
    b"ltrm" => LeftToRightMirroredForms,
    b"mark" => MarkPositioning,
    b"medi" => MedialForms1,
    b"med2" => MedialForms2,
    b"mgrk" => MathematicalGreek,
    b"mkmk" => MarktoMarkPositioning,
    b"mset" => MarkPositioningviaSubstitution,
    b"nalt" => AlternateAnnotationForms,
    b"nlck" => NLCKanjiForms,
    b"nukt" => NuktaForms,
    b"numr" => Numerators,
    b"onum" => OldstyleFigures,
    b"opbd" => OpticalBounds,
    b"ordn" => Ordinals,
    b"ornm" => Ornaments,
    b"palt" => ProportionalAlternateWidths,
    b"pcap" => PetiteCapitals,
    b"pkna" => ProportionalKana,
    b"pnum" => ProportionalFigures,
    b"pref" => PreBaseForms,
    b"pres" => PreBaseSubstitutions,
    b"pstf" => PostBaseForms,
    b"psts" => PostBaseSubstitutions,
    b"pwid" => ProportionalWidths,
    b"qwid" => QuarterWidths,
    b"rand" => Randomize,
    b"rclt" => RequiredContextualAlternates,
    b"rkrf" => RakarForms,
    b"rlig" => RequiredLigatures,
    b"rphf" => RephForms,
    b"rtbd" => RightBounds,
    b"rtla" => RightToLeftAlternates,
    b"rtlm" => RightToLeftMirroredForms,
    b"ruby" => RubyNotationForms,
    b"rvrn" => RequiredVariationAlternates,
    b"salt" => StylisticAlternates,
    b"sinf" => ScientificInferiors,
    b"size" => Opticalsize,
    b"smcp" => SmallCapitals,
    b"smpl" => SimplifiedForms,
    b"ss01" => StylisticSet1,
    b"ss02" => StylisticSet2,
    b"ss03" => StylisticSet3,
    b"ss04" => StylisticSet4,
    b"ss05" => StylisticSet5,
    b"ss06" => StylisticSet6,
    b"ss07" => StylisticSet7,
    b"ss08" => StylisticSet8,
    b"ss09" => StylisticSet9,
    b"ss10" => StylisticSet10,
    b"ss11" => StylisticSet11,
    b"ss12" => StylisticSet12,
    b"ss13" => StylisticSet13,
    b"ss14" => StylisticSet14,
    b"ss15" => StylisticSet15,
    b"ss16" => StylisticSet16,
    b"ss17" => StylisticSet17,
    b"ss18" => StylisticSet18,
    b"ss19" => StylisticSet19,
    b"ss20" => StylisticSet20,
    b"ssty" => MathscriptstyleAlternates,
    b"stch" => StretchingGlyphDecomposition,
    b"subs" => Subscript,
    b"sups" => Superscript,
    b"swsh" => Swash,
    b"titl" => Titling,
    b"tjmo" => TrailingJamoForms,
    b"tnam" => TraditionalNameForms,
    b"tnum" => TabularFigures,
    b"trad" => TraditionalForms,
    b"twid" => ThirdWidths,
    b"unic" => Unicase,
    b"valt" => AlternateVerticalMetrics,
    b"vatu" => VattuVariants,
    b"vchw" => VerticalContextualHalfWidthSpacing,
    b"vert" => VerticalWriting,
    b"vhal" => AlternateVerticalHalfMetrics,
    b"vjmo" => VowelJamoForms,
    b"vkna" => VerticalKanaAlternates,
    b"vkrn" => VerticalKerning,
    b"vpal" => ProportionalAlternateVerticalMetrics,
    b"vrt2" => VerticalAlternatesAndRotation,
    b"vrtr" => VerticalAlternatesForRotation,
    b"zero" => SlashedZero,
);
